{"ast":null,"code":"var _jsxFileName = \"/home/shoaibpc/Documents/React Projects/expense-tracker-mern/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //intial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actons\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const rest = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {}\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction,\n      getTransactions,\n      error: state.error,\n      loading: state.loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/shoaibpc/Documents/React Projects/expense-tracker-mern/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","rest","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD4C,CAG5C;;AACA,iBAAeS,eAAf,GAAgC;AAC9B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAC,kBADE;AAEPC,QAAAA,OAAO,EAACH,GAAG,CAACI,IAAJ,CAASA;AAFV,OAAD,CAAR;AAKD,KARD,CAQE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAC,mBADE;AAEPC,QAAAA,OAAO,EAAEX,KAAK,CAACc,QAAN,CAAeF,IAAf,CAAoBZ;AAFtB,OAAD,CAAR;AAID;AACF;;AAED,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMnB,KAAK,CAACoB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AAEAV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAOH,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAC,mBADE;AAEPC,QAAAA,OAAO,EAAEX,KAAK,CAACc,QAAN,CAAeF,IAAf,CAAoBZ;AAFtB,OAAD,CAAR;AAID;AAEF;;AAED,iBAAekB,cAAf,CAA8BC,WAA9B,EAA2C;AACzC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAW,sBAAX,EAAmCJ,WAAnC,EAAgDC,MAAhD,CAAnB;AAEAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY,CAEb;AAEF;;AAED,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACnCd,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADe;AAEnCgB,MAAAA,iBAFmC;AAGnCG,MAAAA,cAHmC;AAInCX,MAAAA,eAJmC;AAKnCP,MAAAA,KAAK,EAACK,KAAK,CAACL,KALuB;AAMnCC,MAAAA,OAAO,EAACI,KAAK,CAACJ;AANqB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQHG,QARG,CAAR;AAUH,CApEM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n//intial state\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true,\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actons\n    async function getTransactions(){\n      try {\n        const res = await axios.get('/api/v1/transactions');\n\n        dispatch({\n          type:'GET_TRANSACTIONS',\n          payload:res.data.data\n        });\n\n      } catch (err) {\n        dispatch({\n          type:'TRANSACTION_ERROR',\n          payload: error.response.data.error\n        });\n      }\n    }\n\n    async function deleteTransaction(id) {\n      try {\n        await axios.delete(`/api/v1/transactions/${id}`);\n\n        dispatch({\n          type: 'DELETE_TRANSACTION',\n          payload: id\n        });\n      } catch (err) {\n        dispatch({\n          type:'TRANSACTION_ERROR',\n          payload: error.response.data.error\n        });\n      }\n\n    }\n\n    async function addTransaction(transaction) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n\n      try {\n        const rest = await axios.post('/api/v1/transactions', transaction, config)\n\n        dispatch({\n          type: 'ADD_TRANSACTION',\n          payload: res.data.data\n        });\n      } catch (err) {\n        \n      }\n\n    }\n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n        getTransactions,\n        error:state.error,\n        loading:state.loading,\n      }}>\n        {children}\n      </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}